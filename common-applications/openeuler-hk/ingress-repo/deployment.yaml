---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-repo-serviceaccount
  namespace: ingress-nginx-repo
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
imagePullSecrets:
  - name: huawei-swr-image-pull-secret

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-repo-clusterrole
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-repo-role
  namespace: ingress-nginx-repo
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "ingress-controller-leader-repo-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-repo-role-nisa-binding
  namespace: ingress-nginx-repo
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-repo-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-repo-serviceaccount
    namespace: ingress-nginx-repo

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-repo-clusterrole-nisa-binding
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-repo-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-repo-serviceaccount
    namespace: ingress-nginx-repo

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
spec:
  replicas: 2
  template:
    spec:
      nodeSelector:
        ingress: "true"
      containers:
        - name: nginx-ingress-controller
          image: swr.cn-north-4.myhuaweicloud.com/opensourceway/common/ingress-nginx-controller-with-purge-cache:v0.35.0.0
          resources:
            requests:
              cpu: 4000m
              memory: 8192Mi
            limits:
              cpu: 4000m
              memory: 8192Mi
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --maxmind-license-key=TtutIbyHcPwZNxNX
            - --default-backend-service=ingress-nginx-repo/ingress-default-backend
            - --ingress-class=repo-nginx
          volumeMounts:
            - mountPath: /tmp/statics_cache
              name: nginx-proxy-cache
      serviceAccountName: nginx-ingress-repo-serviceaccount
      volumes:
        - name: nginx-proxy-cache
          emptyDir:
            medium: Memory
            sizeLimit: "1000Mi"
